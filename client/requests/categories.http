@baseUrl = http://localhost:5000
@contentType = application/json

@authToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIzMzY0ZDA5Mi03ZWU1LTQ1MTAtYTk5Yy0yZGY2ZmI2NjRjMjAiLCJpYXQiOjE3NTI4MjU4MTQsImV4cCI6MTc1MzQzMDYxNH0.G6NfEu1dPadVC8HcmUFG3r3LYvPMko6U4mVErgXG2hg


### ========================================
### 📂 CATEGORIAS - GERENCIAMENTO
### ========================================
### 
### 📝 NOVO FORMATO DE RESPOSTA:
### 
### 🔹 SEM PAGINAÇÃO:
### {
###   "success": true,
###   "data": {
###     "categories": [
###       {
###         "id": "uuid",
###         "name": "Alimentação",
###         "createdAt": "2024-01-15T00:00:00.000Z",
###         "updatedAt": "2024-01-15T00:00:00.000Z"
###       }
###     ]
###   },
###   "message": "Categorias recuperadas com sucesso"
### }
### 
### 🔹 COM PAGINAÇÃO:
### {
###   "success": true,
###   "data": {
###     "categories": [...],
###     "totalCount": 10
###   },
###   "message": "Categorias recuperadas com sucesso"
### }

### 1. Listar categorias do usuário (sem paginação)
POST {{baseUrl}}/categories
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{}

### 1.1. Listar categorias com paginação
POST {{baseUrl}}/categories
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "page": 1,
  "limit": 5
}

### 2. Criar nova categoria
POST {{baseUrl}}/categories/create
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Lazer"
}

### 3. Atualizar categoria
PUT {{baseUrl}}/categories/update/1
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Entretenimento"
}

### 4. Deletar categoria
DELETE {{baseUrl}}/categories/delete/1
Authorization: Bearer {{authToken}}

### 5. Buscar categoria por ID (se disponível)
GET {{baseUrl}}/categories/1
Authorization: Bearer {{authToken}}

### ========================================
### 🧪 TESTES DE VALIDAÇÃO
### ========================================

### 6. Teste - Nome vazio
POST {{baseUrl}}/categories/create
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": ""
}

### 7. Teste - Nome muito longo
POST {{baseUrl}}/categories/create
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "name": "Este é um nome de categoria muito longo que deve exceder o limite de 50 caracteres permitidos"
}

### 8. Teste - Paginação inválida
POST {{baseUrl}}/categories
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "page": -1,
  "limit": 1000
}

### 9. Teste - ID inválido
GET {{baseUrl}}/categories/id-invalido
Authorization: Bearer {{authToken}}

### ========================================
### 🔒 TESTES DE AUTORIZAÇÃO
### ========================================

### 10. Teste - Listar categorias sem token
POST {{baseUrl}}/categories
Content-Type: {{contentType}}

{}

### 11. Teste - Criar categoria sem token
POST {{baseUrl}}/categories/create
Content-Type: {{contentType}}

{
  "name": "Teste"
}

### ========================================
### 📝 VARIÁVEIS PARA REST CLIENT
### ========================================

# Após criar uma categoria, copie o ID da resposta:
# @categoryId = id-da-categoria-aqui

# Token de autenticação (copie após fazer login):
# @authToken = seu_token_jwt_aqui 